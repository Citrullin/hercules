package crypt

import (
	"reflect"
	"testing"

	"gitlab.com/semkodev/hercules/convert"
)

const (
	kerlTrytes = "BXFYVMRKNEEVRQKZECFSIZRFKDH9HTZTGIKFXMUEIIWFLOYXHFLJTEX9TXKAUPIRMPXQGUSLHUREZ9999"
	cooAddress = "KPWCHICGJZXKE9GSUDXZYUAPLHAKAHYHDXNPHENTERYMMBQOPSQIDENXKLKCEYCPVTZQLEEJVYJZV9BWU"
)

func TestKerl(t *testing.T) {
	expected := []int{0, -1, -1, 1, 1, 0, 0, 1, 0, 1, -1, 0, 0, 0, 0, 0, 1, -1, 0, -1, 0, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, 0, -1, 0, 1, 0, -1, -1, 0, 1, 1, -1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, -1, 1, 1, -1, 0, 1, 1, 0, -1, 1, -1, -1, -1, 1, -1, 1, 1, 0, 0, 1, -1, 0, 1, -1, 1, 0, -1, 1, 1, 1, -1, -1, 1, 0, 1, 1, -1, 0, -1, 0, -1, 1, -1, 0, 1, -1, 1, 1, 0, -1, 0, 1, 0, 1, 0, -1, 0, 1, 1, -1, -1, -1, 1, 1, 1, 1, -1, 0, 1, -1, 1, 0, 0, -1, 1, 0, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 0, 0, 0, -1, -1, 0, -1, -1, -1, 1, -1, 1, -1, -1, -1, 1, 0, -1, 1, -1, -1, 1, 0, -1, 0, 0, -1, -1, 0, 0, 0, 1, 0, -1, -1, -1, -1, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, -1, 1, 1, -1, 1, 0, 1, 0, 0, 1, -1, 0, -1, 1, 1, 1, 1, 0, 1, 0, 0, -1, 1, -1, 0, 0, 0, 1, -1, 0, -1, 1, 1, 0, -1, 0, 0, -1, 1, -1, 0, 0, 0, 0, 0, -1, 1, -1, 0, -1, 0, 0, 0, 1, 0}
	result := RunHashKerl(convert.TrytesToTrits(kerlTrytes))
	if !reflect.DeepEqual(result, expected) {
		t.Error("Wrong kerl!", result)
	}

	expectedCoo := []int{1, -1, 1, 0, -1, 1, -1, 1, -1, 0, -1, 0, 0, 0, 0, 0, -1, -1, 1, 1, 0, 1, -1, -1, 0, 1, 1, 1, -1, 1, -1, 0, 1, 1, 0, 1, -1, -1, 1, -1, 0, 0, -1, 0, -1, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, -1, 1, -1, 1, 1, 0, 1, -1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, 1, 1, 1, -1, -1, 0, 1, 0, 1, -1, 0, 0, 0, 1, 0, 0, 0, -1, -1, 1, 1, -1, 0, 1, 1, -1, -1, 1, -1, 1, -1, 0, 0, 1, -1, -1, 0, 1, -1, 1, 1, -1, 0, -1, -1, 1, 0, 0, 0, -1, 1, 0, -1, -1, 1, -1, 1, 0, 0, 1, 0, -1, -1, 0, -1, 0, 1, -1, 1, 1, 1, 1, -1, -1, 0, 0, -1, -1, 1, 0, 1, 0, 1, 1, 1, 1, 0, -1, -1, 1, 0, 1, 1, 0, -1, -1, 0, -1, 0, 1, 0, 1, 0, 0, 0, 0, 0, -1, 1, 1, 1, -1, 1, 1, 0, 0, 1, 1, -1, -1, -1, 0, -1, 0, -1, 0, 1, -1, 0, 0, -1, 0, -1, 1, -1, -1, -1, -1, 0, -1, -1, 0, 0, 1, -1, 0, -1, 1, 1, 1, 0, 1, -1, 0, 0, 0, -1, -1, 1, 0, -1, 1, 1, 1, 0, 0, 1, 0}
	result = RunHashKerl(convert.TrytesToTrits(cooAddress))
	if !reflect.DeepEqual(result, expectedCoo) {
		t.Error("Wrong kerl for coo!", result)
	}
}

func TestKerl2(t *testing.T) {
	data := []int{-1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, -1, -1, -1, -1, 0, 0, 1, 0, 0, 0, 1, 1, -1, 1, -1, 1, 0, 0, 1, -1, 0, 1, -1, -1, -1, -1, 1, 0, -1, -1, -1, -1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, -1, -1, -1, 0, -1, -1, 0, 0, 1, 1, 1, 1, 0, -1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, -1, 0, 1, -1, 0, 1, 1, 1, 0, 0, -1, -1, -1, 0, -1, -1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 0, 0, 1, -1, -1, -1, 0, 1, 0, -1, 1, 1, -1, -1, 1, 1, -1, -1, 0, 0, -1, -1, 1, 0, -1, 0, 1, 0, -1, -1, -1, 1, -1, -1, 0, -1, 1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 1, -1, 0, 0, -1, -1, 1, 1, -1, 1, -1, 0, 0, 1, 1, 0, 1, 0, 0, 1, -1, 0, 1, -1, -1, 1, -1, 1, 0, 0, 1, -1, 1, 0, -1, 1, -1, 1, -1, 0, -1, -1, -1, 1, 0, 0, -1, 1, 1, 1, 0, -1, -1, -1, 1, -1, 1, 1, 0, 0, 1, 1, -1, -1, 0, 0, 1, 0, 1, 0, 0, -1, 0, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 0, 0, 0, 0}
	expected := []int{-1, -1, -1, 1, 0, -1, 1, 1, 1, -1, 1, 0, 1, 0, 0, -1, 0, -1, 1, 0, -1, -1, 0, 0, 0, -1, -1, 0, 1, 0, 0, 0, -1, 0, 0, 0, 1, 1, -1, -1, 1, 0, 0, 0, -1, -1, 0, 1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 0, -1, -1, 1, 0, 0, 1, 1, 1, 0, 1, -1, 1, 1, -1, 0, 0, 1, -1, 1, -1, 1, -1, 1, 1, -1, -1, -1, 1, 0, -1, 1, 1, 1, -1, 1, 0, -1, 1, 1, -1, 0, -1, 0, 0, 1, -1, 0, 1, -1, -1, 0, 1, 0, 1, 0, -1, 0, 1, 0, -1, 1, 0, 1, 0, -1, 0, 0, -1, 1, 0, 0, 0, 1, -1, 1, 0, 0, -1, 0, 1, 0, 0, 0, 1, 1, 1, 1, -1, 0, 1, 0, 1, 1, -1, -1, -1, 1, 0, 0, -1, -1, 0, 1, 0, 0, -1, 1, 1, 0, 1, 0, 0, 1, 0, -1, -1, 0, 0, 1, -1, -1, 0, 0, 0, -1, 1, -1, 1, 0, 1, -1, -1, 1, 1, 0, 0, 1, 0, -1, -1, 0, -1, 1, 1, 1, 1, 0, 1, -1, 0, 1, 1, 0, 1, 1, 1, 1, -1, 1, 1, -1, 1, 0, 0, 0, 1, -1, 0, 1, 1, -1, 0, 1, 0, 0, -1, 1, 1, 0, -1, 1, -1, 1, 1, 0}
	result := make([]int, len(expected))
	kerl := new(Kerl)
	kerl.Initialize()
	kerl.Absorb(data, 0, 243)
	kerl.Squeeze(result, 0, 243)
	if !reflect.DeepEqual(result, expected) {
		t.Error("Wrong kerl!", result)
	}
}

func TestKerl3(t *testing.T) {
	data := []int{0, 0, -1, -1, 0, 1, -1, -1, 0, 0, -1, -1, -1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, -1, 1, 0, 1, 1, 0, 0, 0, -1, 1, 0, 1, 1, -1, -1, 0, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, 1, 0, -1, 0, -1, -1, 0, 1, 1, 1, 1, 0, 1, -1, 1, 1, -1, 0, -1, 0, 0, 1, 0, -1, 0, 0, 0, -1, -1, -1, 1, -1, 0, 0, 0, 0, -1, 1, 0, -1, -1, 0, 1, 0, 0, -1, 0, -1, 0, 0, -1, -1, 0, 1, 0, 1, 0, -1, 1, 0, -1, -1, 0, -1, 1, 1, 1, -1, 1, -1, 1, 1, 0, 0, 1, -1, 1, 1, 1, 0, 0, 0, 1, 0, 1, -1, -1, -1, 0, 0, 0, -1, 1, 1, -1, 0, -1, 0, 1, 0, 0, 0, 1, -1, 0, -1, -1, 0, -1, 0, -1, 0, 1, 1, 1, 1, 1, 0, 0, 1, -1, -1, 0, 0, 1, 1, -1, 0, -1, 0, -1, -1, 0, -1, 1, -1, 1, 1, -1, 0, 1, -1, 0, -1, 1, -1, 0, -1, 1, 1, 1, -1, 1, -1, -1, 1, 0, -1, -1, 0, 1, 0, 0, 0, 1, 0, -1, 0, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 0, -1, 0, 1, 0, 0, 1, -1, 0, 0, 0, 0, 1, 0, -1, -1, -1, 0, 0, -1, 1, 0, -1, 1, 1, 1, 0, -1, -1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 1, 0, 0, -1, 1, 1, 1, 1, 1, -1, -1, 0, 1, -1, 0, 0, -1, 1, -1, -1, 0, 0, 0, 1, 0, 0, -1, -1, 1, 0, 1, 1, 1, -1, 0, 1, 0, -1, 1, 0, -1, 1, -1, 0, 0, 1, 0, -1, 1, -1, 0, 1, -1, -1, 0, -1, -1, -1, -1, -1, 0, 0, -1, 1, 0, 1, 1, 0, -1, -1, 1, 1, 1, 1, 1, 0, -1, 1, 1, -1, -1, 0, -1, -1, -1, 1, -1, -1, 0, 1, 1, -1, 0, 1, -1, 1, 1, 0, 0, -1, 1, 1, 0, -1, -1, 1, -1, 1, 1, 0, 0, 1, -1, 1, 1, 0, -1, 0, 0, 1, 0, -1, 0, -1, 0, 0, 1, 1, -1, 0, 0, 0, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, 1, 0, 1, -1, -1, -1, -1, 1, 0, 1, 1, 1, 0, 0, 0, -1, 1, -1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, -1, -1, -1, 0, 1, 0, 0, -1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 0, 0, 0, -1, 0, 0, 1, -1, 1, 0, -1, 0, -1, 0, 1, 1, -1, -1, -1, 0, -1, -1, 0, 0, -1, 1, 1, -1, 0, 1, 0, -1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, -1, 1, 0, 1, -1, 1, -1, 0, -1, 1, -1, 1, 1, 1, 0, 0, 1, 1, 1, -1, 0, -1, -1, -1, 0, 0, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, 0, 1, 0, -1, 0, -1, 0, 1, 1, 1, 1, 1, -1, -1, 0, 0, -1, 0, -1, 0, 1, 1, 1, -1, 0, 0, -1, 1, 1, -1, 1, -1, 0, -1, -1, -1, -1, 0, 1, -1, -1, 1, 1, -1, 1, 0, -1, 0, 0, 1, 1, 1, 1, -1, 0, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 0, 0, 1, -1, 1, 1, 1, 0, 0, 1, -1, 0, -1, -1, -1, 1, -1, -1, 1, 0, 1, -1, 1, 1, 1, 1, -1, 0, 0, -1, -1, 0, -1, -1, -1, 1, -1, 0, 0, -1, -1, 1, -1, 1, 0, -1, -1, -1, 0, 0, 1, 0, -1, 0, 1, -1, 0, 1, 1, 0, 1, 1, -1, 0, 1, -1, 0, 0, -1, 0, -1, -1, 1, 1, 1, -1, 0, -1, -1, 1, -1, 1, -1, 1, 1, 0, -1, -1, -1, 0, -1, 0, 1, 1, 1, 0, -1, 0, -1, 0, 1, 0, -1, -1, 0, -1, -1, -1, -1, 0, 0, 1, 1, -1, -1, 0, -1, -1, 0, -1, 1, -1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, -1, 0, 0, -1, -1, 0, 0, -1, -1, 0, 0, -1, 1, 1, 0, 0, 1, 0, 0, -1, 1, 0, 0, 0, -1, -1, 0, 1, 1, 0, -1, -1, -1, -1, 0, 0, -1, 0, 1, -1, 1, 0, -1, -1, 0, 1, -1, -1, 1, 0, 0, -1, 1, -1, 1, 0, 0, 1, -1, 0, 0, -1, 0, 0, 1, -1, 1, -1, 0, 1, 1, -1, 1, -1, 1, 0, 1, -1, -1, 0, 1, -1, -1, 0, 1, -1, -1, -1, 0, 1, 0, 1, 1, -1, 1, -1, -1, 1, 0, 0, 0, -1, -1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, -1, -1, -1, 1, 0, -1, 0, 1, 0, -1, -1, 1, -1, 1, 0, 0, 1, -1, 0, -1, 0, 1, -1, 1, 0, 1, -1, 1, -1, 0, 1, 1, -1, 1, -1, 1, 0, -1, 0, 0, 0, -1, 1, -1, -1, 1, 1, -1, 0, 0, -1, -1, 0, -1, -1, 0, -1, 1, -1, -1, 0, 0, -1, -1, 1, -1, -1, 1, 1, -1, -1, 0, 1, 1, 0, 1, 1, 0, -1, 1, 1, 0, 1, -1, -1, 1, 1, 1, 0, -1, -1, -1, -1, 1, 1, 1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 0, -1, 1, -1, -1, -1, 0, 0, 1, 0, 1, 1, -1, -1, 1, -1, 1, -1, 1, 0, 1, -1, 1, 0, -1, 1, 0, 1, 0, -1, 0, 1, 1, 1, -1, -1, -1, -1, -1, 1, 1, 1, 0, 0, -1, -1, -1, 1, 1, -1, -1, -1, 0, -1, 1, 1, 0, 0, 0, 1, 0, -1, 0, -1, 1, 1, 0, 0, 1, 1, 0, 1, 1, -1, -1, -1, -1, 0, 1, 0, 1, -1, 1, 0, 0, 0, 0, 1, 0, -1, -1, -1, 0, 1, 0, 1, 1, 0, 0, 0, 1, -1, 0, 1, 0, 0, 0, 0, 0, 1, 1, -1, 0, 1, -1, 0, 0, -1, -1, 1, 0, 0, 1, 1, 1, 0, -1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, -1, -1, 1, 1, -1, 1, -1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, -1, 0, 1, -1, 0, -1, 0, 0, 1, -1, -1, -1, -1, 1, -1, 1, 0, 0, 1, 0, 1, 1, -1, 1, -1, 0, 1, 1, 0, -1, 0, 1, 0, 0, 1, 1, 1, -1, 0, 1, 0, 0, -1, 1, -1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, -1, -1, 1, 0, -1, -1, 1, 0, -1, -1, 0, 1, 0, 1, 0, 1, 0, -1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, 0, 0, 1, -1, 0, 1, 1, -1, 1, 0, 0, 1, 0, 0, -1, 1, 0, 1, -1, 1, 0, 0, 1, -1, 1, -1, 0, 0, 0, 0, 1, -1, 1, 0, -1, -1, 1, 0, 1, 1, 1, 1, -1, 0, 0, 1, 0, 0, -1, -1, 0, -1, 1, 1, -1, 0, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, 0, 1, 0, 0, 1, -1, 1, 0, 0, -1, 0, 0, 1, 0, -1, 1, -1, 1, 0, 1, -1, 1, -1, -1, 1, 1, -1, 0, -1, 1, 0, 1, -1, 1, 1, 1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 0, 0, -1, -1, 1, -1, -1, -1, 0, 0, 0, 1, 1, 0, 0, -1, -1, 1, 0, 1, -1, 0, 1, 0, -1, -1, 1, 1, 0, 0, -1, -1, 1, 0, -1, 0, 1, 1, 1, -1, 1, 0, -1, 1, 1, -1, 0, -1, 0, 0, 1, -1, 0, -1, 1, -1, 1, 1, 0, 0, 1, 1, 0, -1, 0, 1, 0, 0, 1, 0, -1, 0, -1, 1, 1, -1, 1, -1, -1, 0, -1, 0, 0, 0, 1, 1, 0, -1, 1, 1, 1, 1, 1, 1, -1, 0, 1, 0, 0, -1, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1, -1, 0, 1, 0, -1, 1, 0, 1, 1, 1, 1, 0, -1, -1, -1, 1, 1, 1, 1, -1, -1, 0, -1, -1, 1, -1, 0, 1, -1, -1, 1, -1, 1, 0, 0, -1, -1, 1, -1, 1, -1, 0, -1, -1, -1, 0, -1, 0, 1, -1, -1, -1, 1, 0, -1, 1, 0, 0, 0, -1, 0, -1, 0, 1, -1, 0, 0, -1, 0, 1, 0, 1, 0, 1, 1, 0, -1, 0, -1, 1, -1, -1, 0, -1, 1, 0, 0, 1, -1, 0, 0, -1, 0, 1, 1, 1, -1, 0, 0, -1, 1, 0, 0, -1, 1, 0, 1, -1, 0, -1, -1, 0, -1, -1, 1, -1, 0, 1, -1, 1, -1, -1, -1, 1, 1, -1, 0, 0, 1, 0, 1, 0, 1, 1, 0, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, 0, -1, 1, 1, 0, 0, -1, 0, -1, 1, 0, -1, 0, -1, 0, 1, 1, 0, 1, -1, 0, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, -1, 0, 0, -1, -1, 0, 1, 0, 1, 1, -1, 0, -1, 1, 1, 0, -1, -1, 0, 1, 0, 1, -1, 1, 1, 0, -1, 0, 0, 1, 0, 1, 0, 1, -1, 0, -1, 0, 0, -1, -1, 0, 1, 0, -1, -1, 0, -1, 0, 1, 0, 1, -1, -1, 1, -1, 0, 0, 0, -1, -1, -1, 0, -1, 1, -1, 0, 0, 0, 1, 0, -1, 0, -1, 0, 1, -1, 0, 1, 0, 0, -1, -1, -1, 1, -1, 0, 1, 0, 0, -1, 1, 1, 0, 0, -1, 0, -1, 1, 0, 0, 0, 1, 1, -1, 1, 1, -1, 0, -1, 1, 1, 1, -1, 0, 0, -1, 1, -1, 0, 0, 0, 0, 1, 0, 0, 1, 1, -1, 1, -1, 0, 1, 1, 1, 0, 0, -1, -1, 0, -1, -1, 1, 1, 1, 0, 0, 1, -1, 0, -1, -1, -1, 0, 0, -1, 1, -1, 1, -1, 0, -1, -1, 0, 0, 1, 0, 1, -1, -1, 0, 1, 0, 0, -1, -1, -1, 1, 0, 0, 1, -1, -1, 1, 1, -1, 0, 0, 0, -1, 1, -1, 0, 1, 0, -1, 1, -1, 0, -1, -1, 0, -1, 0, 1, 1, 1, 1, 1, 0, 1, -1, 0, 0, 0, 1, 0, 1, 1, 1, -1, 1, -1, 1, 1, 0, 0, -1, -1, 1, -1, 0, 0, -1, -1, 1, 0, 0, 0, -1, 1, 0, 0, -1, 1, 0, -1, 1, 1, 1, -1, -1, -1, 1, -1, -1, 0, -1, 1, 0, -1, 0, 1, -1, 1, 1, 1, 0, -1, 1, 1, -1, 0, 1, 0, -1, -1, -1, 1, -1, 0, 0, 0, -1, 1, -1, -1, -1, 0, 0, 0, 1, -1, -1, 0, 0, -1, 0, 1, 0, 0, 0, 0, 0, -1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, -1, 1, 1, 0, 1, 1, -1, 0, 1, 1, 1, -1, 0, -1, -1, 1, 0, 1, 1, 0, 1, 0, 0, 0, -1, 1, 1, 1, 1, -1, 1, 1, 1, 0, 1, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, 0, -1, 1, 1, 0, 0, 0, 1, 1, 0, 0, -1, 0, 1, 0, 0, 0, 1, 0, 1, -1, 0, 1, -1, 1, 1, 1, -1, -1, -1, 0, 1, -1, -1, 0, 1, -1, 1, -1, -1, -1, 0, -1, 0, -1, -1, 0, -1, 1, 0, 0, -1, 1, 0, 0, -1, 1, 1, -1, 0, 1, -1, 0, 0, 1, -1, 0, -1, 0, 0, -1, 1, 0, 1, 1, 1, -1, 0, -1, -1, 0, 0, 0, -1, -1, -1, 1, 0, 1, 0, 0, -1, 0, -1, 0, -1, 1, -1, 1, 0, -1, 1, 1, -1, -1, 1, 1, 0, 0, -1, 0, 1, -1, 0, -1, 0, 0, 0, 1, 1, -1, 0, -1, -1, 1, -1, 1, 1, -1, 1, 1, 0, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 0, -1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, -1, -1, 1, -1, -1, 0, -1, -1, 0, 1, 0, 1, 0, 1, 1, -1, 1, 0, 1, 1, 0, 1, 1, -1, 1, 1, -1, 0, -1, -1, 0, 1, -1, -1, 1, 0, 1, 1, -1, -1, 0, 1, -1, 0, 0, 1, -1, 1, -1, 1, -1, 1, 1, 0, 0, 1, 1, 0, -1, 0, -1, -1, 0, 1, -1, -1, -1, -1, 0, -1, 0, 1, -1, -1, 1, 1, -1, -1, 0, 0, 0, -1, -1, 1, 1, -1, 1, -1, -1, -1, 0, 0, 1, 1, -1, 1, -1, -1, -1, 1, -1, 0, 0, 0, 1, -1, 0, 1, 0, 0, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 0, 1, -1, -1, -1, 1, -1, 1, 0, -1, -1, 0, 0, 1, -1, 1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, 0, 1, 1, 0, 1, 1, 0, 0, -1, 1, -1, 0, 0, 0, -1, 0, 0, 1, 1, 0, -1, -1, 0, 1, 1, -1, 1, -1, -1, 0, 0, 0, 0, 1, -1, 0, -1, -1, -1, 0, 0, 0, -1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, -1, 1, 1, 0, 0, 1, 0, 0, 0, -1, 0, -1, 0, 1, -1, -1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, -1, 0, -1, -1, 1, -1, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0, 0, 0, 1, -1, 1, 1, 0, 0, 1, 1, 1, -1, 0, -1, 0, 0, 0, -1, -1, 1, 0, 1, -1, 0, 1, -1, 1, 0, -1, -1, 0, -1, 0, 0, 0, 1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, 1, -1, 1, 0, -1, -1, -1, 0, 1, 1, 0, 1, 1, -1, 1, 1, 0, 1, 0, -1, 1, 0, 1, 1, -1, 0, 1, 1, 1, -1, 0, -1, 1, -1, 1, 1, 1, 1, 0, -1, -1, -1, 1, -1, 1, 1, 1, 0, -1, 0, 1, 0, 0, 1, 1, 1, -1, 0, 0, -1, 1, 0, 1, 0, 0, 0, 0, 0, -1, 1, 1, 1, 0, -1, -1, -1, -1, 1, -1, 0, 1, 0, 1, -1, -1, 0, 0, 1, 0, 0, 1, 1, -1, 0, 1, 1, -1, 0, -1, -1, -1, -1, 0, -1, 1, -1, 1, 0, 0, 0, 1, 0, 1, -1, 1, -1, 1, 1, -1, -1, 0, -1, 1, -1, 0, -1, 1, -1, 0, -1, 0, 0, 0, 1, 1, -1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, -1, 1, -1, 0, 1, -1, 1, -1, -1, 0, 0, 0, 1, 0, -1, 1, -1, 0, -1, 0, 1, 1, -1, 1, -1, -1, 0, 0, 1, -1, -1, 0, 0, -1, -1, 0, 1, -1, 0, -1, -1, 1, 0, 0, -1, -1, 1, 0, 0, 1, -1, 1, 0, 0, -1, 1, 1, 1, 1, -1, 0, 0, 1, -1, -1, 0, 1, 1, -1, 1, 0, 0, 0, -1, 1, 0, 1, -1, 0, 1, 1, -1, 1, -1, -1, 1, -1, -1, -1, 0, 0, -1, 0, 1, -1, 0, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 0, -1, 0, 1, 0, 1, 0, 1, -1, 0, 1, 0, -1, -1, 1, -1, 1, 0, -1, 1, 0, 0, -1, 1, -1, 1, 1, -1, 1, 1, 0, 0, 0, 0, 0, 0, 0, -1, 1, 0, 0, -1, 1, -1, 1, 1, -1, 0, 1, -1, 0, 0, -1, -1, 0, 0, 0, 1, -1, 1, -1, -1, -1, 0, 0, 0, -1, 1, 0, 1, 0, 0, 1, 1, 0, 1, -1, -1, -1, 0, -1, 1, 1, 0, 1, 1, -1, 1, 0, 1, 1, -1, 0, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, 0, -1, -1, 0, 0, -1, 1, 0, 1, 1, -1, -1, -1, -1, 1, 1, 0, 1, 1, 0, 0, 1, 1, -1, 0, 0, 0, 0, -1, 0, 0, 1, -1, -1, 1, 1, 0, 0, 0, -1, -1, 1, 1, 0, 1, -1, 0, 1, 1, -1, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 0, 0, 1, 1, 1, -1, 1, 1, 0, -1, -1, 1, 0, 1, -1, -1, 1, 1, -1, 0, 1, -1, -1, 1, 1, 1, -1, 0, -1, -1, 1, 0, 1, 1, 0, -1, 0, -1, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, 0, 1, 0, -1, -1, -1, 0, 1, -1, 0, -1, 1, -1, -1, 1, 1, 1, -1, 1, 0, -1, 1, 1, 1, 0, 1, -1, 1, 0, 1, 0, -1, 0, -1, 1, 1, 0, 1, 0, -1, 0, 0, 0, 1, -1, 0, -1, 0, 0, 1, -1, -1, -1, 0, 1, 1, -1, 1, -1, 1, 0, 1, 1, 0, -1, 0, -1, 1, -1, -1, 0, 0, 0, -1, 1, 1, -1, -1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 0, -1, 1, 0, -1, 0, 1, 1, 0, 0, -1, 0, -1, -1, 1, 0, -1, 0, 1, 1, 1, 0, 0, 0, -1, 1, -1, -1, -1, 0, 1, 0, -1, 0, 0, -1, -1, 0, -1, 0, -1, 0, 1, -1, -1, 0, 1, 1, 0, -1, 1, -1, 1, 0, 0, -1, 0, -1, 1, 0, -1, -1, -1, -1, 0, 0, 0, 0, 1, 1, 1, 0, 1, -1, 0, -1, 1, 0, 1, 1, 0, -1, 0, 1, 0, -1, -1, 1, -1, -1, 0, 1, 1, 0, 1, -1, 0, 0, 1, 0, -1, -1, 1, 0, 1, 1, -1, -1, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, -1, 1, 1, 0, 0, 0, 1, 0, 0, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 0, 1, -1, 0, -1, 1, 1, 1, -1, 1, 0, -1, 1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, -1, 1, -1, -1, 0, 0, -1, 1, 0, 0, 1, 0, 1, 0, -1, 1, 0, 0, 0, -1, -1, 1, 1, 0, 1, -1, 0, 0, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, 1, -1, 1, -1, 0, 0, 1, 1, 1, 0, -1, 0, -1, 0, 1, 0, -1, -1, -1, 0, 1, -1, 0, 0, 1, 0, 1, 1, -1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, -1, -1, 0, 0, 0, 1, -1, 1, 1, 0, 1, 1, 1, -1, -1, -1, 1, -1, 1, 0, 0, 0, -1, 0, 0, -1, 1, -1, 1, 0, 0, -1, -1, 0, 1, -1, -1, -1, 0, -1, 0, 0, 1, 1, 0, 1, 0, -1, 1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, 0, 0, 1, -1, 1, -1, 0, 0, 1, 1, -1, 0, 0, 0, 0, 0, 0, -1, -1, 1, 1, -1, 1, 1, 1, 0, 0, -1, 0, 1, 1, 0, 0, 1, 0, 1, -1, -1, -1, -1, -1, 0, -1, 1, -1, -1, 0, 0, 0, 0, -1, 0, 1, 1, -1, 0, 0, 0, -1, 1, -1, 1, -1, 0, 1, 0, -1, 0, -1, 0, 0, 0, 0, 0, 1, -1, -1, 0, 1, 1, 1, -1, 0, 1, 0, -1, -1, 1, 1, 0, 0, 1, 0, -1, -1, 0, 0, 0, 0, 0, -1, -1, 1, 0, 1, -1, 1, -1, -1, 1, 1, 1, 0, 1, 1, 0, -1, 1, 0, 0, 0, 0, -1, -1, 1, 0, -1, 0, 0, -1, 1, 0, 1, 0, -1, -1, 0, 1, 0, 0, 1, -1, 1, 1, 0, -1, -1, -1, 0, -1, 0, 0, 0, 1, -1, 1, 1, -1, 0, 1, 1, 1, 1, -1, -1, -1, 0, -1, 1, -1, -1, 1, 1, -1, 1, -1, -1, -1, 1, 1, 1, 0, 1, -1, 0, -1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, -1, 0, 0, -1, 1, 1, 1, -1, 1, -1, -1, -1, 0, 0, 0, -1, 1, -1, 0, 0, 1, -1, 1, -1, 1, 1, -1, -1, 0, 0, 0, 0, -1, -1, 0, 1, 0, 1, 0, -1, -1, 0, -1, 1, 0, -1, 0, 1, 1, 1, 0, -1, -1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, -1, 0, -1, 0, 1, 0, 1, -1, 1, 0, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 0, 1, -1, 1, -1, 0, 0, 0, 0, -1, 0, -1, 0, 0, 1, 1, 0, 0, -1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, 1, 0, 1, 1, -1, 1, -1, -1, 1, -1, 0, 1, 0, 1, 0, 0, 1, 0, -1, 1, 1, 0, -1, 0, -1, 1, 1, 0, -1, -1, 0, 1, 1, 0, 0, 0, -1, 0, 1, -1, -1, 1, 1, 0, 1, 1, 0, -1, -1, -1, -1, 1, 0, -1, 1, -1, 1, -1, -1, -1, -1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, -1, 1, -1, 1, 0, 1, 0, 1, 0, -1, -1, 1, 0, -1, 1, 1, 0, -1, -1, 1, 1, -1, 1, -1, 1, 0, 0, 0, 0, 0, 0, -1, 1, 0, 1, 1, -1, -1, -1, -1, -1, 0, -1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 0, 0, -1, -1, -1, -1, -1, 1, 0, 1, 0, 1, -1, 1, 0, 1, -1, 0, -1, -1, 1, 0, 0, 0, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 1, 1, 1, 1, -1, 0, 0, 0, 0, -1, 0, 1, 0, 1, 1, 1, -1, 0, 0, 0, 0, 1, 1, 1, -1, 1, 0, 0, -1, -1, -1, -1, -1, 1, -1, 0, 1, 0, 0, 0, -1, 0, 1, 1, 1, 1, -1, 1, 1, 0, -1, 0, 1, 1, -1, 0, 0, 1, 1, 1, 0, 0, -1, -1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, -1, -1, 1, -1, -1, -1, -1, 1, 0, -1, 0, -1, -1, 0, 0, -1, 1, -1, 1, -1, 1, -1, 1, -1, 0, -1, 0, 1, 0, 0, 0, 1, 1, 1, 0, -1, 1, 0, 1, 0, -1, -1, 1, 0, 1, -1, 0, -1, 1, 1, 1, 1, -1, -1, 1, 0, 1, 1, -1, 0, -1, 1, 0, 0, -1, -1, 0, 1, -1, 1, -1, 0, -1, 1, 1, 1, 0, 1, 1, 1, 1, 1, -1, 0, 1, 1, -1, 1, 0, -1, 1, -1, 0, 0, 1, -1, 1, 1, -1, 1, 0, 1, 1, 1, 1, -1, 0, -1, 0, -1, -1, -1, 0, 0, 1, 1, 1, -1, 1, 0, 0, -1, 0, 1, -1, -1, 1, -1, 0, -1, 1, 0, 1, 0, -1, 0, 0, 1, 1, -1, 1, -1, 0, 0, 1, 1, 0, -1, -1, 0, 1, 1, -1, 0, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, -1, 1, 1, -1, 0, 1, 1, 1, -1, 0, 1, -1, 0, 1, -1, 1, 0, 0, -1, -1, 1, 0, 1, 0, 0, 0, 0, -1, 0, 1, 0, 0, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 0, 0, 0, 1, 1, -1, 0, -1, -1, 0, -1, 1, 1, 0, 1, -1, -1, 1, 0, -1, -1, 1, 0, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 0, 0, 1, 1, -1, 1, 0, 1, -1, 0, -1, 0, 0, 0, 0, 1, -1, 0, 1, 0, 1, -1, 1, -1, 1, 0, 1, 0, 0, 0, 0, 1, -1, -1, 0, 1, -1, -1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, -1, 1, 0, 0, -1, 0, 0, 0, 1, 1, 0, -1, 1, 0, -1, 1, 0, -1, 0, -1, 0, 0, 1, 0, 0, 0, -1, -1, 0, 0, -1, 0, 0, 1, 0, 0, 1, 1, 1, 0, -1, 1, 1, 0, -1, 0, 1, 1, -1, -1, 1, 1, 1, 1, 0, -1, -1, 1, 0, 0, -1, -1, 1, -1, 0, 0, 1, -1, 1, -1, 1, 1, 0, 0, 0, -1, 1, -1, 1, 1, -1, -1, 0, -1, -1, 0, 1, 1, 0, 0, -1, 1, -1, -1, 0, 1, -1, -1, 0, 1, 0, -1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, -1, 0, -1, -1, 1, 0, 1, -1, 1, 0, 0, 0, 1, 0, 1, 1, -1, 1, 1, -1, -1, 1, 1, 0, -1, 1, 1, 1, 0, 1, -1, 0, 0, -1, 0, -1, 1, -1, 0, 1, 1, 1, 1, 0, -1, 1, 0, 1, 0, -1, 0, -1, 1, 1, 0, 0, 1, -1, -1, -1, -1, 1, -1, 0, 0, -1, -1, 0, 1, -1, 0, -1, 0, 0, 1, 1, 0, -1, -1, 1, 1, 0, 0, -1, -1, -1, 1, 1, 1, -1, 0, -1, -1, 1, 0, -1, 1, 0, 0, 0, -1, 0, -1, 0, 1, -1, 0, 1, 1, 0, 1, 1, -1, 1, 0, -1, -1, -1, 1, -1, 1, 1, 0, 1, -1, 1, 1, 0, -1, 1, -1, 1, 1, -1, 0, 0, 0, 0, -1, 1, -1, 1, 1, 0, 0, 1, 1, 0, -1, 1, -1, -1, -1, 0, 1, 1, 0, 1, -1, 1, -1, 0, -1, 0, -1, -1, -1, -1, 1, 1, 1, -1, 0, 0, 1, 1, 0, 1, 1, 0, -1, 1, 0, -1, 1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 0, 1, 1, 0, -1, -1, 1, -1, 1, 0, 0, 0, -1, -1, 1, 0, 1, -1, -1, 1, -1, 1, 0, 1, -1, -1, -1, -1, 0, 0, 0, -1, 1, 0, 0, 1, -1, 0, 0, -1, -1, 0, 0, -1, -1, 1, 0, 0, 0, 0, 1, -1, 1, 1, 1, 0, 0, 1, 0, -1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, -1, 1, -1, -1, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, -1, 0, 0, -1, -1, -1, 1, 0, -1, 0, 1, 1, 0, -1, 0, -1, 0, -1, 0, 1, -1, -1, -1, 0, 0, 0, 1, 0, 1, 1, 0, -1, 1, 0, 0, -1, -1, 0, 0, 0, 1, 0, -1, 0, -1, 0, -1, -1, 1, 0, 1, 0, 0, 1, 0, 1, -1, -1, 0, 0, -1, 0, -1, 0, 0, 0, -1, -1, 0, -1, 1, 0, -1, 0, 1, -1, 1, 0, 1, 0, 0, 1, 0, 0, -1, 1, 0, 1, 0, 0, 0, 0, -1, 0, -1, 0, -1, -1, -1, 0, -1, -1, 1, 1, 1, 1, -1, 0, -1, 0, -1, 1, 1, -1, 0, 1, 0, -1, 1, 1, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, -1, 1, 0, 1, 0, 1, 0, -1, 0, 1, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 1, -1, 1, -1, 0, 0, 1, 0, 1, 1, 1, 1, -1, 1, 1, 1, 0, -1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, -1, -1, 0, 1, 1, -1, 0, 1, 1, 0, -1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, -1, -1, 0, -1, 1, 1, -1, 0, -1, 0, 1, 0, 0, 1, -1, 0, -1, 1, -1, 1, -1, 1, 1, 1, 0, -1, 1, 0, -1, -1, -1, 0, 1, 1, 1, -1, 1, 1, 1, -1, 0, 0, -1, 1, -1, 1, -1, -1, -1, 0, 1, 0, -1, 1, 0, -1, -1, 0, -1, 1, 1, -1, 1, -1, 1, 1, 1, -1, 1, 0, -1, -1, 0, 1, -1, -1, 1, 0, -1, 1, 1, 1, 1, -1, 0, 0, 1, -1, -1, 0, 0, 0, -1, 1, 1, 0, 0, 1, 1, -1, -1, 1, 0, -1, 1, 1, 1, 0, -1, 0, -1, 0, 0, 1, -1, 1, 0, 1, -1, -1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, -1, 1, 0, 1, -1, 0, 1, -1, -1, 1, 1, 0, 0, -1, 1, 1, 0, 0, -1, 0, -1, 0, -1, 0, 0, -1, 1, -1, -1, -1, 0, 0, -1, 1, 1, -1, 0, 0, 1, -1, -1, 0, 1, 1, 0, -1, -1, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 1, -1, 1, -1, 0, -1, -1, -1, 1, 0, -1, 1, 1, 0, 0, -1, 0, 1, 1, 1, 1, 1, -1, -1, 1, -1, 0, 1, 1, 0, 1, 0, -1, 0, 0, -1, 1, -1, 0, 1, -1, 1, 1, 0, 0, 1, 0, 1, -1, -1, -1, 1, -1, 0, 0, -1, 1, -1, -1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, -1, -1, 1, -1, 0, 0, 1, 0, 1, 1, -1, 1, 0, 0, 0, 0, -1, -1, 1, 0, -1, 1, 0, 0, 1, -1, 0, 0, 1, 1, 1, -1, -1, 0, 1, -1, 1, -1, -1, 1, 1, -1, -1, 0, 1, 1, 0, -1, 0, 1, 0, 0, 0, -1, -1, -1, 1, 0, 0, 1, -1, 1, 0, -1, -1, -1, 1, -1, -1, 1, 1, 1, 0, 0, 1, 1, -1, -1, -1, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, -1, 0, 1, 0, 0, -1, 1, 1, 0, -1, -1, 1, -1, 0, 1, -1, 0, 0, 1, 0, 0, 0, -1, -1, 1, -1, 1, 0, 1, 1, 1, 1, 0, -1, -1, 1, -1, 0, -1, 1, 1, 0, -1, 1, 0, 0, -1, 0, -1, 0, 1, 0, 1, -1, 1, 1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, -1, 1, 0, -1, 1, 1, 0, 0, 1, 1, 1, 1, 1, -1, 0, 1, -1, -1, 1, 1, -1, 0, 0, 1, 1, -1, -1, -1, 0, 1, -1, 1, -1, 1, 1, 0, -1, 1, 1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1, 0, -1, 0, 0, 0, 1, 0, -1, -1, 1, -1, 1, 0, -1, 1, -1, 0, -1, -1, -1, 0, 0, -1, 1, 0, 1, 0, 0, -1, 1, 1, -1, 0, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 0, 1, 1, -1, -1, 1, 0, 0, 0, 0, 1, 1, 1, -1, 0, -1, -1, 0, -1, -1, 0, -1, -1, -1, 1, -1, 1, 0, -1, 0, 0, 1, 1, -1, -1, 1, 0, -1, 0, -1, -1, 0, -1, 1, 1, -1, 0, 0, -1, -1, 1, 1, 0, -1, 0, 0, -1, 0, -1, 0, 1, -1, 0, 0, -1, 0, 0, 0, 0, -1, 1, 0, 0, 1, 0, 1, 1, 1, -1, -1, 1, 0, 0, 1, 0, -1, -1, -1, 1, 1, 1, 0, 1, -1, -1, -1, 1, 0, -1, 0, 1, 0, 0, 1, -1, -1, -1, -1, -1, -1, 1, -1, 0, 0, 0, 0, 1, 1, 0, -1, 1, 0, 1, 0, 0, 0, -1, 1, 1, 0, -1, 0, -1, 0, -1, -1, 0, -1, 1, 1, -1, 0, -1, -1, 1, 1, 1, 0, 1, 1, -1, 0, -1, 1, 0, 1, -1, 0, 0, 1, 0, 1, -1, -1, 0, -1, -1, 1, -1, -1, 1, -1, 1, 0, -1, -1, 1, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 0, -1, 1, -1, 0, 0, 0, -1, -1, 1, 1, -1, 1, -1, -1, 0, -1, -1, 1, -1, 1, 1, -1, 0, 0, -1, -1, 1, 0, 1, 0, -1, 1, 0, 0, -1, -1, -1, -1, -1, 1, 0, 0, 0, 1, -1, 1, 0, -1, 0, -1, 0, -1, 1, 1, 1, 1, -1, -1, 0, -1, -1, 1, 1, 0, 0, 1, -1, -1, 0, -1, 0, 0, -1, -1, -1, 0, 0, -1, 1, -1, -1, 0, 1, -1, -1, 1, 0, 0, -1, -1, 0, 0, 0, -1, 0, -1, 0, 1, 0, -1, 0, 1, 1, 0, -1, -1, -1, -1, 0, 0, 0, -1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, -1, -1, 1, 0, -1, 1, 0, 1, -1, 0, -1, 1, 1, 1, -1, -1, 0, -1, 0, 0, 0, 0, -1, 0, 1, 0, 1, -1, 1, 0, 0, -1, 0, -1, 1, 0, 0, 1, 0, 1, 1, -1, -1, 1, 1, 0, -1, -1, 0, 1, -1, 0, 0, -1, -1, -1, 1, 1, -1, 0, -1, 1, 0, 1, 0, 0, -1, -1, 0, -1, -1, 1, -1, 0, 0, -1, -1, -1, 0, 0, 1, 1, 0, 1, 1, -1, 1, -1, 1, -1, 0, 0, 0, 1, 1, -1, -1, 1, -1, 0, -1, 0, -1, 0, 1, 0, 1, -1, 0, 0, -1, 1, 0, 1, 0, 0, -1, 0, 1, 0, 1, 0, -1, 0, 1, -1, 0, 1, 0, 1, 1, 0, 1, -1, -1, 0, -1, 0, -1, 0, 0, 1, -1, -1, -1, 1, -1, -1, 1, 1, 0, 0, -1, 0, 0, 0, 1, -1, -1, -1, 0, 0, -1, -1, 1, 0, -1, 1, 0, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -1, 1, 1, 0, 0, 1, -1, 1, -1, 1, 0, 0, -1, -1, -1, -1, 0, 0, -1, -1, 0, 0, 0, 1, -1, -1, 1, -1, -1, 1, 0, 1, 1, -1, 0, -1, 1, -1, -1, 0, -1, -1, -1, 0, -1, 1, 1, 1, 1, -1, -1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, -1, 1, 1, 1, -1, 0, -1, 1, 0, 1, 0, -1, 0, 1, -1, 1, 1, -1, -1, -1, 1, 1, -1, -1, 0, -1, -1, 1, -1, 1, 0, 0, 1, -1, 1, 0, 1, 1, 0, 0, 1, 0, -1, 1, 1, 1, 0, 0, -1, -1, -1, -1, 0, -1, 1, 1, 1, 1, 1, -1, 0, 0, 0, -1, -1, -1, -1, 0, 1, 0, -1, -1, -1, -1, -1, 0, -1, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, -1, -1, 1, -1, 1, 0, 0, 1, 1, 0, 1, -1, 1, -1, -1, 0, 0, 1, 0, 1, -1, 1, 0, 0, -1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, -1, 1, -1, -1, 1, 0, 1, 0, 1, 1, 1, 1, -1, -1, -1, 0, 1, 0, 1, 1, 0, -1, 1, -1, -1, 0, -1, -1, 0, -1, 0, 1, 0, 1, 0, 0, -1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, -1, 0, -1, 0, 1, 1, -1, 0, -1, 0, 0, 1, 0, 0, 1, -1, 0, -1, -1, 1, 1, 1, -1, 0, 0, 0, -1, 0, 1, -1, 1, 1, 1, 0, -1, 1, 0, -1, 0, -1, 1, 0, 0, 1, 0, 0, 1, 1, 0, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 1, 0, 0, 1, -1, 0, 1, 0, 0, -1, 1, 0, 0, 0, 0, -1, 1, 1, -1, -1, 1, -1, -1, 1, 0, 1, 1, -1, -1, 1, 1, -1, 0, 1, 1, 1, -1, 0, 1, 0, 1, 1, 0, 0, -1, -1, -1, -1, 1, -1, 0, -1, 0, -1, -1, -1, -1, -1, -1, 0, 0, -1, 1, 1, 0, -1, 1, -1, 1, -1, 1, -1, 0, 0, 1, -1, -1, 1, 1, 0, -1, -1, 1, 0, -1, -1, 0, -1, 0, 1, -1, -1, 1, 0, -1, -1, 0, 0, 1, 1, -1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, -1, 0, 0, 1, -1, 0, -1, 0, -1, 0, 1, -1, -1, -1, -1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, -1, 1, 1, -1, 1, -1, -1, 0, 0, 1, 1, 1, 1, 1, -1, -1, -1, -1, 1, 0, 0, -1, -1, 0, 1, -1, 1, -1, -1, 1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 0, 0, 1, -1, 1, 1, -1, -1, 1, -1, -1, 0, 0, 1, -1, 1, -1, 0, 0, 0, -1, 1, 0, -1, 0, 0, -1, 1, 1, -1, -1, 0, -1, -1, -1, 0, -1, 1, -1, 0, 0, -1, 1, 0, -1, -1, 1, -1, -1, 0, -1, 1, 0, 1, 1, 1, -1, 1, 1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 0, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, 0, -1, 0, -1, -1, 0, 1, 1, 1, 1, 0, 0, -1, 0, 1, 0, 1, 1, 0, 1, -1, -1, 0, 0, -1, -1, 0, -1, 1, 1, 1, 1, 1, -1, -1, -1, 0, -1, 0, -1, 1, 0, 1, 1, 1, 0, -1, -1, 1, -1, -1, 1, -1, 1, 0, 0, 1, 0, -1, 0, 1, 1, 0, 0, 0, -1, -1, -1, 0, 0, 1, 1, 1, 0, 0, -1, 0, -1, 1, -1, 0, -1, -1, -1, 1, 1, 1, -1, 0, -1, 1, 1, -1, 0, -1, 1, 0, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 1, -1, 0, 0, 1, 1, 1, 0, -1, 0, 0, 0, 0, 1, -1, 1, 0, -1, -1, 1, 0, 1, -1, 1, 0, 0, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 1, 0, 0, 1, 0, 0, 0, -1, -1, -1, 0, -1, 1, 0, 1, 0, 0, 1, 1, 1, -1, 0, 1, -1, 1, 1, 1, 0, -1, 0}
	expected := []int{1, 0, -1, 1, 0, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, -1, 0, 1, 0, 0, 1, -1, 0, -1, 1, 0, 0, 1, -1, -1, 0, 1, 0, -1, 0, -1, 1, 0, -1, 0, -1, -1, 1, -1, 0, -1, -1, -1, -1, 0, 1, 0, 1, 0, -1, 1, 0, -1, 1, -1, 0, -1, 0, -1, 1, 1, 0, -1, 0, 1, 1, -1, -1, 0, -1, 0, -1, -1, -1, 1, -1, 0, 0, 0, 1, 1, 1, 0, -1, -1, 0, 0, 1, 0, -1, 1, 1, -1, 0, 1, -1, -1, -1, 1, 0, 1, 1, -1, 0, 1, 1, -1, 1, -1, 1, -1, 0, -1, -1, -1, 1, 1, -1, -1, 0, 1, 1, 0, 0, 1, 1, -1, 1, 1, -1, -1, 0, 1, 0, 1, -1, 1, 1, 1, -1, 0, 0, 1, 1, 1, 0, 0, -1, 0, -1, 1, 0, 1, -1, -1, -1, 1, -1, 1, 1, 0, -1, 1, 1, 1, 1, 0, 0, -1, -1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, -1, -1, -1, 1, 1, 0, 1, -1, 1, -1, -1, -1, 0, 0, 1, -1, 0, 1, 0, 0, 1, 1, 0, -1, 1, -1, -1, 0, 1, -1, 0, 1, 0, 0, 1, 0, -1, -1, -1, 1, -1, -1, 1, -1, -1, 0, 1, 0}
	result := make([]int, len(expected))
	kerl := new(Kerl)
	kerl.Initialize()
	kerl.Absorb(data, 0, HASH_LENGTH*27)
	kerl.Squeeze(result, 0, HASH_LENGTH)
	if !reflect.DeepEqual(result, expected) {
		t.Error("Wrong kerl!", result)
	}
}

func TestKerl4(t *testing.T) {
	data := []int{1, 0, 1, 0, 1, 0, -1, 1, 0, 0, 1, -1, 0, 1, -1, 0, -1, 1, 1, -1, 0, -1, 0, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, 0, 1, -1, -1, -1, 1, 0, -1, -1, -1, -1, 0, -1, -1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, -1, -1, 1, 1, -1, 0, -1, -1, 1, -1, 0, 1, 0, 0, 1, 1, 1, 1, -1, -1, 0, 1, 1, 0, 1, 1, 0, -1, -1, -1, -1, 0, 1, 1, -1, 0, 1, 0, 1, 0, -1, -1, 0, 1, 1, 1, 1, 1, 1, 0, 1, -1, -1, 0, 1, 0, 1, -1, 0, -1, -1, -1, -1, 0, 1, 0, -1, 1, 1, 1, -1, -1, 1, -1, 0, -1, 0, 0, 0, -1, 1, 0, -1, 1, 1, -1, 0, -1, -1, 0, 1, -1, 1, 0, 0, 1, -1, 1, 0, 0, -1, 0, 1, -1, -1, 0, 0, 1, 1, 0, -1, 0, 1, -1, -1, -1, 0, 1, 1, 0, -1, -1, 1, -1, -1, 0, 1, 0, 1, 0, 0, 1, 0, 1, -1, 1, 1, 1, 1, -1, -1, 0, -1, 0, -1, 0, 0, -1, 1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 0, -1, 1, -1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 0, -1, 0, 0, 0, 0}
	expected := []int{1, 1, -1, 1, 1, -1, 1, 1, 0, 0, 0, 1, -1, -1, 1, -1, 0, -1, 0, -1, 1, 1, 1, 0, 1, 1, -1, -1, 0, 1, -1, 0, 1, -1, -1, -1, 0, -1, 1, -1, 0, 1, -1, 1, 1, 1, -1, -1, 0, 0, 1, 1, -1, 0, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, 1, 1, 0, 0, -1, -1, 1, 0, 1, 1, -1, -1, 1, 1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, 0, 0, 0, 1, -1, -1, 0, 1, 1, 0, 1, -1, 1, 1, -1, 1, -1, 1, 0, 0, 0, 1, 1, -1, -1, 0, 1, 0, 0, 1, 0, 1, -1, -1, 0, 1, 1, 0, 1, -1, 0, 1, 1, 0, -1, 1, -1, 1, 1, 0, 0, -1, 1, 1, -1, 1, 0, -1, 0, 1, 0, 1, 0, 1, -1, 0, 1, 0, 1, 0, 1, 1, 1, -1, 0, 1, 1, 0, -1, 0, -1, 0, 0, 0, -1, 0, 1, -1, -1, 0, 1, 0, 1, -1, 1, 1, 0, 1, 0, 0, 1, 1, 1, -1, -1, 0, -1, 0, -1, 0, 0, 0, 1, -1, 0, -1, -1, -1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, -1, 0, 1, -1, 0, 0, -1, 1, 0, 0, 0, -1, 1, 1, 1, 0, 1, 0}
	result := make([]int, len(expected))
	kerl := new(Kerl)
	kerl.Initialize()
	kerl.Absorb(data, 0, HASH_LENGTH)
	kerl.Squeeze(result, 0, HASH_LENGTH)
	if !reflect.DeepEqual(result, expected) {
		t.Error("Wrong kerl!", result)
	}
}

func TestKerl5(t *testing.T) {
	data := []int{-1, 0, -1, 1, 0, 0, -1, -1, 1, 1, 1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 0, 1, -1, 0, -1, 0, 0, -1, -1, 0, -1, -1, -1, -1, 0, -1, 1, -1, -1, 1, -1, 0, -1, 0, 1, 1, 1, 1, 0, 0, -1, -1, 1, 1, -1, 1, 0, 0, 0, -1, 0, 0, -1, 0, 1, -1, -1, -1, 1, -1, 1, 0, 1, 0, -1, 1, 1, -1, 1, 1, 0, 1, -1, -1, 0, 1, -1, 1, 1, -1, 1, -1, 0, 0, 1, 0, 0, 0, -1, -1, 1, -1, 0, 1, 1, 0, -1, 1, -1, 1, 0, -1, 0, 1, -1, -1, -1, 1, -1, -1, 0, -1, -1, -1, -1, 1, -1, 1, 0, -1, -1, 1, 0, 1, -1, -1, 0, 0, 1, 1, 1, 0, 0, 1, -1, 1, 1, 0, 1, 0, -1, 0, 0, 0, 1, 1, -1, 0, 0, 0, 0, 1, 1, 1, -1, 1, 0, 0, 0, 0, -1, 0, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -1, 1, 0, 0, 0, -1, 1, 0, 1, -1, 0, 1, 0, -1, 0, -1, 0, 0, 1, 1, 0, 0, 1, -1, -1, 0, -1, 1, 0, -1, 1, -1, 0, 1, -1, -1, 0, 0, 1, 1, 0, -1, 0, 1, 1, 1, 0, -1, -1, 1, 0, 1, 0, 1, -1, 1, 0, -1, 0}
	expected := []int{-1, 1, 1, -1, 1, 0, 0, -1, 1, 1, -1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, -1, -1, -1, 0, -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, 0, -1, 1, 0, 0, 1, 1, -1, -1, 0, 1, 1, 1, -1, -1, -1, 1, 0, 0, 0, -1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 0, 1, -1, 0, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, 0, -1, -1, 0, 1, 0, 0, -1, 0, -1, 1, 1, -1, 1, 0, 0, 0, -1, 1, 0, -1, 0, 1, 0, 0, 0, -1, 0, 0, 1, -1, -1, 1, 0, -1, 1, 0, -1, 1, 1, -1, 1, 0, -1, -1, 0, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, 1, 1, 0, 1, 0, 1, 1, -1, -1, 0, 1, -1, 0, -1, 0, 1, -1, 0, 0, -1, -1, 1, 0, 1, 1, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1, 0, 0, 1, 0, 0, -1, 0, 0, 1, 0, -1, -1, 0, -1, 0, 0, 1, 1, 1, 0, 1, -1, -1, -1, -1, 1, 1, -1, 0, -1, -1, -1, 0, 1, 0, 0, 1, -1, 0, 1, 0, -1, 1, 0, 0, -1, 0, 1, 1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 1, 0, 0}
	result := make([]int, len(expected))
	kerl := new(Kerl)
	kerl.Initialize()
	kerl.Absorb(data, 0, HASH_LENGTH)
	kerl.Squeeze(result, 0, HASH_LENGTH)
	if !reflect.DeepEqual(result, expected) {
		t.Error("Wrong kerl!", result)
	}
}
